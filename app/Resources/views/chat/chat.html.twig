<!doctype html>
<html>
<head>
    <title>{% block title %}Chat Room: {{ chat }} {% endblock %}</title>
    {% block stylesheets %}
        <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body { font: 13px Helvetica, Arial; }
        label {  background: #FFF;  padding: 3px;  text-align: center;  position: fixed;
            bottom: 0;  right:0;  top: 0;  width: 10%;  border:1px solid gray;  }
        timestamp  {
            text-align: left;
            font-size: 12px;
            color: #999;
            float: right;
        }
        form { background: #000; padding: 3px; position: fixed; bottom: 0; width: 100%; }
        form input { border: 0; padding: 10px; width: 90%; margin-right: .5%; }
        form button { width: 9%; background: rgb(130, 224, 255); border: none; padding: 10px; }
        #messages { list-style-type: none; margin: 0; padding: 0; }
        #messages li { padding: 5px 10px;
            width: 90%;
        }
        #messages li:nth-child(odd) { background: #eee; }
        #messages { margin-bottom: 40px }
        #user_label{list-style-type: none;}
        #user_list {list-style-type: none;}
    </style>
    {% endblock %}

</head>
<body>

{% block body %}
    <label id = "user_label"><b>Online</b></label>
    <ul id = "user_list"></ul>
    <div id="messages"></div>
    <div id="time_stamp"></div>
    <form action="">
        <input id="m" autocomplete="off"/><button>Send</button>
    </form>{% endblock %}
{% block javascripts %}
    <script src="https://code.jquery.com/jquery-1.11.1.js"></script>
    <script>
        $('#user_label').append($('#user_list'));
        //connecting to websocket...
        var roomName = '{{ chat }}';
        var roomId = '{{ id }}';
        var conn = new WebSocket('{{ web_socket }}');
        var user = '{{ app.user.username }}';
        var userId = '{{ app.user.id }}';
        console.log(conn);
        conn.onopen = function(e) {
            console.log("Connection established!");
            subscribe(conn,roomName);
            conn.send(JSON.stringify({command: "connect", user: user, roomId: roomId,userId:userId}));
            // load previous messages upon connection to room

        };
        conn.onclose = function (e) {
            //$('#user_list').remove($('<li>').text(user));
            conn.send(JSON.stringify({command: "disconnect", user: user}));
            //conn.send(user + ' has left the room');
        };
        conn.onmessage = function(e) {
            console.log(e.data);
            var json = JSON.parse(e.data);
            switch(json['command']) {
                case "message":
                    if ("user"in json) {
                        createMessage(json['user']+json['message'],false);
                    }
                    else {
                        createMessage(json['message'],false);
                    }
                    break;
                case "online":
                    $('#user_list').empty();
                    console.log("data is array!");
                    var usersOnline = json['list'];
                    console.log("Users online: " + usersOnline);
                    for (var k in usersOnline) {
                        //converts json obj to string then parses string before displaying it
                        var str = JSON.stringify(usersOnline[k]);
                        var str2 = JSON.parse(str);
                        $('#user_list').append($('<li>').text(str2.user));
                    }
                    break;
                case "loadMessages":
                    var messages = json['messages'];
                    for (var m in messages) {
                        var message = JSON.stringify(messages[m]['message']);
                        message = message.replace(/["']/g, "");
                        var time = JSON.stringify(messages[m]['timestamp']);
                        time = time.replace(/["']/g, "");
                        // console.log(msg + time);
                        createMessage([message,time],true);
                    }
                    break;
                default:
                    break;
            }
        };
        // function to submit message to chat room
        $(function () {
            $('form').submit(function() {
                var msg =': ' + $('#m').val();
                //conn.send(msg);
                //$('#messages').append($('<li>').text(msg));
                window.scrollTo(0, document.body.scrollHeight);
                $('#m').val('');
               sendMessage(msg);
                return false;
            });
        });
        function subscribe(conn,channel) {
            console.log("Subscribed to " + channel);
            conn.send(JSON.stringify({command: "subscribe", channel: channel}));
        }
        function sendMessage(msg) {
            conn.send(JSON.stringify({command: "message",user:user,userId:userId,message: msg,roomId:roomId}));
        }
        // creates message for interface
        function createMessage(msg,logMsg) {
            if (!logMsg) {
                $('#messages').append($('<li>').text((msg)).append($("<timestamp></timestamp>").append(timeStamp())));
            }
            else {
                $('#messages').append($('<li>').text((msg[0])).append($("<timestamp></timestamp>").append(msg[1])));
            }

        }
        //TODO : 2:03 = 2:3 on interface. Fix This
        function timeStamp() {
            var currentDate = new Date();
            return currentDate.getHours()  + ":"+ currentDate.getMinutes();
        }
    </script>
{% endblock %}
</body>
</html>